/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/users": {
    /** Get All Users */
    get: operations["get_all_users_users_get"];
    /** Create User */
    post: operations["create_user_users_post"];
  };
  "/users/summaries": {
    /** Get All User Summaries */
    get: operations["get_all_user_summaries_users_summaries_get"];
  };
  "/users/{user_id}/deactivate": {
    /** Deactivate User */
    patch: operations["deactivate_user_users__user_id__deactivate_patch"];
  };
  "/users/role_update": {
    /** Update Role */
    patch: operations["update_role_users_role_update_patch"];
  };
  "/auth/token": {
    /** Login */
    post: operations["login_auth_token_post"];
  };
  "/samples": {
    /** Get Own Samples */
    get: operations["get_own_samples_samples_get"];
    /** Upload Sample */
    post: operations["upload_sample_samples_post"];
  };
  "/samples/{sample_id}": {
    /** Delete Sample */
    delete: operations["delete_sample_samples__sample_id__delete"];
  };
  "/audio_files/{filename}": {
    /** Get Audio */
    get: operations["get_audio_audio_files__filename__get"];
  };
  "/samples/next": {
    /** Get Next Sample For Labelling */
    get: operations["get_next_sample_for_labelling_samples_next_get"];
  };
  "/samples/owner/{user_id}": {
    /** Get Samples Of User */
    get: operations["get_samples_of_user_samples_owner__user_id__get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AudioFile */
    AudioFile: {
      /** Path */
      path: string;
      /** Format */
      format: string;
    };
    /** Body_login_auth_token_post */
    Body_login_auth_token_post: {
      /** Grant Type */
      grant_type?: string;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string;
      /** Client Secret */
      client_secret?: string;
    };
    /** Body_upload_sample_samples_post */
    Body_upload_sample_samples_post: {
      /** Name */
      name: string;
      language: components["schemas"]["Language"];
      /**
       * File
       * Format: binary
       */
      file: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /**
     * Language
     * @description An enumeration.
     * @enum {unknown}
     */
    Language: "NV" | "en" | "cs";
    /**
     * Role
     * @description An enumeration.
     * @enum {string}
     */
    Role: "user" | "reviewer" | "moderator" | "admin";
    /** Sample */
    Sample: {
      /** Id */
      id: number;
      /** Duration */
      duration: number;
      language: components["schemas"]["Language"];
      /**
       * Created At
       * Format: date-time
       */
      created_at?: string;
      /** Owner */
      owner?: number;
      /** Audio Files */
      audio_files: components["schemas"]["AudioFile"][];
    };
    /** User */
    User: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      role: components["schemas"]["Role"];
    };
    /** UserCreate */
    UserCreate: {
      /** Name */
      name: string;
      /**
       * Email
       * Format: email
       */
      email?: string;
      /** Password */
      password: string;
      /** Invitation Code */
      invitation_code?: string;
    };
    /** UserRoleUpdate */
    UserRoleUpdate: {
      /** Id */
      id: number;
      role: components["schemas"]["Role"];
    };
    /** UserSummary */
    UserSummary: {
      user: components["schemas"]["User"];
      /** Samples Count */
      samples_count: number;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {
  /** Get All Users */
  get_all_users_users_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"][];
        };
      };
    };
  };
  /** Create User */
  create_user_users_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserCreate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get All User Summaries */
  get_all_user_summaries_users_summaries_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSummary"][];
        };
      };
    };
  };
  /** Deactivate User */
  deactivate_user_users__user_id__deactivate_patch: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Role */
  update_role_users_role_update_patch: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRoleUpdate"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Login */
  login_auth_token_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_login_auth_token_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Own Samples */
  get_own_samples_samples_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Sample"][];
        };
      };
    };
  };
  /** Upload Sample */
  upload_sample_samples_post: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_sample_samples_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Sample */
  delete_sample_samples__sample_id__delete: {
    parameters: {
      path: {
        sample_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Audio */
  get_audio_audio_files__filename__get: {
    parameters: {
      path: {
        filename: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Next Sample For Labelling */
  get_next_sample_for_labelling_samples_next_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Sample"];
        };
      };
    };
  };
  /** Get Samples Of User */
  get_samples_of_user_samples_owner__user_id__get: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Sample"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
